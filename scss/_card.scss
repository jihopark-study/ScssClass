// radius, boxshadow, width, height, bgColor, padding
$shadow1 : 0px 4px 2px 0px rgba(6, 6, 6, 0.02);
$shadow2 : 0px 4px 2px 0px rgba(6, 6, 6, 0.1);
$card : type1 20px $shadow1 165px 165px $white 20px,
type2 20px $shadow2 165px 165px $white 20px;


$cardIcon : (
  // "key":value;
  ico1 : '../images/ico_list1_1.svg',
  ico2 : '../images/ico_list1_2.svg',
  ico3 : '../images/ico_list1_3.svg',
  ico4 : '../images/ico_list1_4.svg',
);

$boxDesign : (
  1: (
    'borderColor' : $grayca,
    'radius' : 20px,
    'padding' : 40px,
    'shadow': 0px 8px 16px 0px #0000000F,
  ),
  2: (
    'borderColor' : $yellow,
    'radius' : 10px,
    'padding' : 10px,
    'shadow': 0px 2px 16px 0px #0000000F,
  ),


);


.box-type1{
  // @include box(map-get(map, ket, value, key, value));
  @include box2($boxDesign, 1);

}

.box-type2{
  // @include box(map-get(map, ket, value, key, value));
  @include box2($boxDesign, 2);
  font-size: 30px;

  @include tablet{
    font-size: 20px;
    color: orange;
  }
  @include mobile{
    font-size: 40px;
    color: pink;
  }
}

@each $class,$radius,$boxshadow,$width,$height,$bgColor,$padding in $card{
  .card-#{$class}{
    border-radius: $radius;
    box-shadow: $boxshadow;
    width: $width;
    height: $height;
    background-color: $bgColor;
    padding: $padding;
  }
};

@each $class, $url in $cardIcon{
  .card-group > li.#{$class} {
    background-image: url(#{$url});
    background-position: right 16px bottom 16px;
    background-repeat: no-repeat;
  }
};
// .card-group > li.클래스명{
//   background-image: 이미지경로;
//   background-position: right 16px bottom 16px;
//   background-repeat: no-repeat;
// }
// .card-group > li.ico1{
//   background-image: $cardIcon;
//   background-position: right 16px bottom 16px;
//   background-repeat: no-repeat;
// }

//  map-get($map : 맵변수이름, $key: 키값) => 
//  속성안에 있기 때문에 이렇게 쓰는 특수한 경우(값 안의 값을 표현)

.left-top-icon{
  // background-image: url(#{map-get(var, key)});
  background-image: url(#{map-get($map:$cardIcon, $key:ico1)});
  background-position: right 16px bottom 16px;
  background-repeat: no-repeat;
}

.card-group2{
  a{
    // 믹스인은 무조건 가장 상단에 넣음 => 점수 때문에
    // 없는 값은 null을 준다
    @include background('ico_arrow_right_gray.svg', right 40px center);
    @include box($grayca, 20px, 40px, 0px 8px 16px 0px #0000000F);
    display: block;
  }
}


// .card-group3{
//   > li {
//     &:nth-child(1){
//       @include background('ico_list1_1.svg', right 16px bottom 16px);
//     }
//     &:nth-child(2){
//       @include background('ico_list1_1.svg', right 16px bottom 16px);
//     }
//     &:nth-child(3){
//       @include background('ico_list1_1.svg', right 16px bottom 16px);
//     }
//     &:nth-child(4){
//       @include background('ico_list1_1.svg', right 16px bottom 16px);
//     }
//   }
// }
.card-group3{
  > li {
    @for $index from 1 through 10 {
        // through는 이하를 뜻 함 (3포함)
        // for문은 리스트 갯수를 여유있게 만들어 놓으면 좋음
        &.ico#{$index}{
          @include background('ico_list1_#{$index}.svg', right 16px bottom 16px);
        }
    }
  }
}